ajax请求：
    $.ajax({
				url : "",
				dataType : "json",
				type : "",
				data : {

				},
				success : function (data) {

				}
			});

    //修改时间  修改人
    String editTime = DateTimeUtil.getSysTime();
    String editBy = ((User)request.getSession().getAttribute("user")).getName();

    //创建时间  创建人
    String createTime = DateTimeUtil.getSysTime();
    String createBy = ((User) request.getSession().getAttribute("user")).getName();

jsp绝对路径配置：
    <%@ page contentType="text/html;charset=UTF-8" language="java" isELIgnored="false" %>
    <%
    String path = request.getContextPath();
    String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path + "/";
    %>
    <!DOCTYPE html>
    <html>
    <head>
    	<base href=" <%=basePath%>">

活动信息的添加：
    String id = UUIDUtil.getUUID();
    String owner = request.getParameter("owner");
    String name = request.getParameter("name");
    String startDate = request.getParameter("startDate");
    String endDate = request.getParameter("endDate");
    String cost = request.getParameter("cost");
    String description = request.getParameter("description");
    //当前系统时间
    String createTime = DateTimeUtil.getSysTime();
    //当前登录用户
    String createBy = ((User) request.getSession().getAttribute("user")).getName();
    String editTime = request.getParameter("");
    String editBy = request.getParameter("");

BootStrap日期组件：
    1.在webapp/jQuery中导入bootstrap-datetimepicker-master插件
    2.在jsp中引入插件：
        <link rel="stylesheet" type="text/css" href="jquery/bootstrap-datetimepicker-master/css/bootstrap-datetimepicker.min.css">
        <script type="text/javascript" src="jquery/bootstrap-datetimepicker-master/js/bootstrap-datetimepicker.js"></script>
        <script type="text/javascript" src="jquery/bootstrap-datetimepicker-master/locale/bootstrap-datetimepicker.zh-CN.js"></script>
        注意：这个链接必须在BootStrap插件链接的下面
    3.设置time类属性：
        在jsp的<script>标签中设置time类属性
            年月日 时分秒
            $(".time").datetimepicker({
                language:  "zh-CN",
                format: "yyyy-mm-dd hh:ii:ss",//显示格式
                minView: "hour",//设置只显示到月份
                initialDate: new Date(),//初始化当前日期
                autoclose: true,//选中自动关闭
                todayBtn: true, //显示今日按钮
                clearBtn : true,
                pickerPosition: "bottom-left"
            });
             年月日
            $(".time").datetimepicker({
                minView: "month",
                language:  'zh-CN',
                format: 'yyyy-mm-dd',
                initialDate: new Date(),//初始化当前日期
                autoclose: true,
                todayBtn: true,
                pickerPosition: "bottom-left"
            });

BootStrap分页组件：
    1.将原来的分页组件删除，只留下顶层div
    2.在webapp/jQuery中导入bs_pagination插件
    3.在jsp文件中引入文件：
        <link rel="stylesheet" type="text/css" href="jquery/bs_pagination/jquery.bs_pagination.min.css">
        <script type="text/javascript" src="jquery/bs_pagination/jquery.bs_pagination.min.js"></script>
        <script type="text/javascript" src="jquery/bs_pagination/en.js"></script>
        注意：这三个文件必须在引入BootStrap文件链接的下方，因为现有BootStrap主体才有分页插件
    4.在查询活动信息列表的ajax请求的最后编写分页代码：
        //计算总页数
        var totalPages = data.total%pageSize==0 ? data.total/pageSize :  parseInt(data.total/pageSize)+1;
        //处理完代码之后，实现分页操作
        $("#activityPage").bs_pagination({
            currentPage: pageNo, // 页码
            rowsPerPage: pageSize, // 每页显示的记录条数
            maxRowsPerPage: 20, // 每页最多显示的记录条数
            totalPages: totalPages, // 总页数
            totalRows: data.total, // 总记录条数
            visiblePageLinks: 3, // 显示几个卡片
            showGoToPage: true,
            showRowsPerPage: true,
            showRowsInfo: true,
            showRowsDefaultInfo: true,
            //这个回调函数在点击分页组件时触发，不要动
            onChangePage : function(event, data){
                pageList(data.currentPage , data.rowsPerPage);
            }
        });

          这个方法是在用户修改分页组件的原有基础上发送ajax请求，保留用户之前的视角
          $("#activityPage").bs_pagination('getOption', 'currentPage')：当前的页数
          $("#activityPage").bs_pagination('getOption', 'rowsPerPage')：没页展示的条数
          例如：
              保存之后回到第一页，并且保持原有每页展示的条数
              pageList(1,$("#activityPage").bs_pagination('getOption', 'rowsPerPage'));

自动补全插件核心代码：
    $("#create-customerName").typeahead({
    	source: function (query, process) {
    		$.post(
    			"workbench/transaction/getCustomerName.do",
    			{ "name" : query },
    			function (data) {
    				//alert(data);
    				process(data);
    			},
    			"json"
    			);
    		},
    		delay: 1500
    	});
